construct.type                ln:1                class
identifier                    ln:1                BasicArithmatic
control                       ln:2                {
mod.access                    ln:3                static
mod.behaviour                 ln:3                final
type                          ln:3                int
identifier                    ln:3                constant
operator.binary               ln:3                =
literal.int                   ln:3                10
control                       ln:3                ;
mod.access                    ln:5                static
type                          ln:5                int
identifier                    ln:5                casualMethod
control                       ln:5                (
control                       ln:5                )
control                       ln:6                {
action                        ln:7                return
literal.int                   ln:7                1
control                       ln:7                ;
control                       ln:8                }
mod.access                    ln:10               static
type                          ln:10               void
identifier                    ln:10               main
control                       ln:10               (
identifier                    ln:10               String
identifier                    ln:10               args
control                       ln:10               )
control                       ln:11               {
type                          ln:12               int
identifier                    ln:12               a
operator.binary               ln:12               =
literal.int                   ln:12               4
control                       ln:12               ;
type                          ln:13               int
identifier                    ln:13               b
operator.binary               ln:13               =
literal.int                   ln:13               2
operator.binary               ln:13               +
identifier                    ln:13               casualMethod
control                       ln:13               (
control                       ln:13               )
control                       ln:13               ;
construct.conditional         ln:14               if
control                       ln:14               (
literal.boolean               ln:14               true
control                       ln:14               )
control                       ln:15               {
identifier                    ln:16               b
operator.binary               ln:16               +=
literal.int                   ln:16               1
control                       ln:16               ;
control                       ln:17               }
type                          ln:18               int
identifier                    ln:18               c
operator.binary               ln:18               =
identifier                    ln:18               constant
control                       ln:18               ;
construct.conditional         ln:19               if
control                       ln:19               (
literal.boolean               ln:19               false
control                       ln:19               )
control                       ln:20               {
identifier                    ln:21               c
operator.binary               ln:21               +=
literal.int                   ln:21               89
control                       ln:21               ;
control                       ln:22               }
construct.conditional         ln:23               else
control                       ln:24               {
identifier                    ln:25               c
operator.binary               ln:25               +=
literal.int                   ln:25               1
control                       ln:25               ;
control                       ln:26               }
type                          ln:27               int
identifier                    ln:27               sum
operator.binary               ln:27               =
identifier                    ln:27               a
operator.binary               ln:27               +
identifier                    ln:27               b
control                       ln:27               ;
type                          ln:28               int
identifier                    ln:28               product
operator.binary               ln:28               =
identifier                    ln:28               a
operator.binary               ln:28               *
identifier                    ln:28               b
control                       ln:28               ;
type                          ln:29               int
identifier                    ln:29               difference
operator.binary               ln:29               =
identifier                    ln:29               a
operator.binary               ln:29               -
identifier                    ln:29               b
control                       ln:29               ;
type                          ln:30               int
identifier                    ln:30               addImmediate
operator.binary               ln:30               =
identifier                    ln:30               a
operator.binary               ln:30               +
literal.int                   ln:30               2
control                       ln:30               ;
type                          ln:31               int
identifier                    ln:31               subImmediate
operator.binary               ln:31               =
identifier                    ln:31               a
operator.binary               ln:31               -
literal.int                   ln:31               2
control                       ln:31               ;
type                          ln:34               int
identifier                    ln:34               multiplyImmediate
operator.binary               ln:34               =
identifier                    ln:34               b
operator.binary               ln:34               *
literal.int                   ln:34               0x05
control                       ln:34               ;
type                          ln:35               int
identifier                    ln:35               parenthesis
operator.binary               ln:35               =
identifier                    ln:35               a
operator.binary               ln:35               +
control                       ln:35               (
identifier                    ln:35               a
operator.binary               ln:35               +
identifier                    ln:35               b
control                       ln:35               )
control                       ln:35               ;
type                          ln:36               int
identifier                    ln:36               pemdasFull
operator.binary               ln:36               =
control                       ln:36               (
identifier                    ln:36               a
operator.binary               ln:36               +
identifier                    ln:36               b
control                       ln:36               )
operator.binary               ln:36               *
literal.int                   ln:36               3
operator.binary               ln:36               -
literal.int                   ln:36               10
control                       ln:36               ;
type                          ln:37               int
identifier                    ln:37               pemdasFullAlternate
operator.binary               ln:37               =
identifier                    ln:37               a
operator.binary               ln:37               +
identifier                    ln:37               b
operator.binary               ln:37               *
control                       ln:37               (
literal.int                   ln:37               3
operator.binary               ln:37               -
literal.int                   ln:37               10
control                       ln:37               )
control                       ln:37               ;
type                          ln:38               int
identifier                    ln:38               multipleParenthis
operator.binary               ln:38               =
literal.int                   ln:38               1
operator.binary               ln:38               +
control                       ln:38               (
identifier                    ln:38               a
operator.binary               ln:38               +
control                       ln:38               (
identifier                    ln:38               b
operator.binary               ln:38               -
literal.int                   ln:38               5
control                       ln:38               )
operator.binary               ln:38               *
literal.int                   ln:38               2
control                       ln:38               )
operator.binary               ln:38               *
literal.int                   ln:38               7
control                       ln:38               ;
control                       ln:58               }
control                       ln:59               }
