construct.type                ln:1                class
identifier                    ln:1                BasicArithmatic
control                       ln:2                {
mod.access                    ln:3                static
construct.type                ln:3                class
identifier                    ln:3                StaticClass
control                       ln:4                {
type                          ln:5                int
identifier                    ln:5                aNumber
operator.binary               ln:5                =
literal.int                   ln:5                1
control                       ln:5                ;
mod.access                    ln:6                static
type                          ln:6                int
identifier                    ln:6                aSecondNumber
operator.binary               ln:6                =
literal.int                   ln:6                2
control                       ln:6                ;
control                       ln:7                }
mod.access                    ln:9                static
type                          ln:9                int
identifier                    ln:9                constant
operator.binary               ln:9                =
literal.int                   ln:9                10
control                       ln:9                ;
mod.access                    ln:11               static
type                          ln:11               int
identifier                    ln:11               casualMethod
control                       ln:11               (
control                       ln:11               )
control                       ln:12               {
action                        ln:13               return
literal.int                   ln:13               1
control                       ln:13               ;
control                       ln:14               }
mod.access                    ln:16               static
type                          ln:16               void
identifier                    ln:16               main
control                       ln:16               (
identifier                    ln:16               String
identifier                    ln:16               args
control                       ln:16               )
control                       ln:17               {
identifier                    ln:18               StaticClass
identifier                    ln:18               test
operator.binary               ln:18               =
action                        ln:18               new
identifier                    ln:18               StaticClass
control                       ln:18               (
control                       ln:18               )
control                       ln:18               ;
type                          ln:19               int
identifier                    ln:19               a
operator.binary               ln:19               =
literal.int                   ln:19               4
control                       ln:19               ;
type                          ln:20               int
identifier                    ln:20               b
operator.binary               ln:20               =
literal.int                   ln:20               2
operator.binary               ln:20               +
identifier                    ln:20               casualMethod
control                       ln:20               (
control                       ln:20               )
control                       ln:20               ;
construct.conditional         ln:21               if
control                       ln:21               (
literal.boolean               ln:21               true
control                       ln:21               )
control                       ln:22               {
identifier                    ln:23               b
operator.binary               ln:23               +=
literal.int                   ln:23               1
control                       ln:23               ;
control                       ln:24               }
type                          ln:25               int
identifier                    ln:25               c
operator.binary               ln:25               =
identifier                    ln:25               constant
control                       ln:25               ;
construct.conditional         ln:26               if
control                       ln:26               (
literal.boolean               ln:26               false
control                       ln:26               )
control                       ln:27               {
identifier                    ln:28               c
operator.binary               ln:28               +=
literal.int                   ln:28               89
control                       ln:28               ;
control                       ln:29               }
construct.conditional         ln:30               else
control                       ln:31               {
identifier                    ln:32               c
operator.binary               ln:32               +=
literal.int                   ln:32               1
control                       ln:32               ;
control                       ln:33               }
type                          ln:34               int
identifier                    ln:34               sum
operator.binary               ln:34               =
identifier                    ln:34               a
operator.binary               ln:34               +
identifier                    ln:34               b
control                       ln:34               ;
type                          ln:35               int
identifier                    ln:35               product
operator.binary               ln:35               =
identifier                    ln:35               a
operator.binary               ln:35               *
identifier                    ln:35               b
control                       ln:35               ;
type                          ln:36               int
identifier                    ln:36               difference
operator.binary               ln:36               =
identifier                    ln:36               a
operator.binary               ln:36               -
identifier                    ln:36               b
control                       ln:36               ;
type                          ln:37               int
identifier                    ln:37               addImmediate
operator.binary               ln:37               =
identifier                    ln:37               a
operator.binary               ln:37               +
literal.int                   ln:37               2
control                       ln:37               ;
type                          ln:38               int
identifier                    ln:38               subImmediate
operator.binary               ln:38               =
identifier                    ln:38               a
operator.binary               ln:38               -
literal.int                   ln:38               2
control                       ln:38               ;
type                          ln:41               int
identifier                    ln:41               multiplyImmediate
operator.binary               ln:41               =
identifier                    ln:41               b
operator.binary               ln:41               *
literal.int                   ln:41               0x05
control                       ln:41               ;
type                          ln:42               int
identifier                    ln:42               parenthesis
operator.binary               ln:42               =
identifier                    ln:42               a
operator.binary               ln:42               +
control                       ln:42               (
identifier                    ln:42               a
operator.binary               ln:42               +
identifier                    ln:42               b
control                       ln:42               )
control                       ln:42               ;
type                          ln:43               int
identifier                    ln:43               pemdasFull
operator.binary               ln:43               =
control                       ln:43               (
identifier                    ln:43               a
operator.binary               ln:43               +
identifier                    ln:43               b
control                       ln:43               )
operator.binary               ln:43               *
literal.int                   ln:43               3
operator.binary               ln:43               -
literal.int                   ln:43               10
control                       ln:43               ;
type                          ln:44               int
identifier                    ln:44               pemdasFullAlternate
operator.binary               ln:44               =
identifier                    ln:44               a
operator.binary               ln:44               +
identifier                    ln:44               b
operator.binary               ln:44               *
control                       ln:44               (
literal.int                   ln:44               3
operator.binary               ln:44               -
literal.int                   ln:44               10
control                       ln:44               )
control                       ln:44               ;
type                          ln:45               int
identifier                    ln:45               multipleParenthis
operator.binary               ln:45               =
literal.int                   ln:45               1
operator.binary               ln:45               +
control                       ln:45               (
identifier                    ln:45               a
operator.binary               ln:45               +
control                       ln:45               (
identifier                    ln:45               b
operator.binary               ln:45               -
literal.int                   ln:45               5
control                       ln:45               )
operator.binary               ln:45               *
literal.int                   ln:45               2
control                       ln:45               )
operator.binary               ln:45               *
literal.int                   ln:45               7
control                       ln:45               ;
control                       ln:65               }
control                       ln:66               }
