construct.type                ln:1                class
identifier                    ln:1                BasicArithmatic
control                       ln:2                {
mod.access                    ln:3                static
construct.type                ln:3                class
identifier                    ln:3                StaticClass
control                       ln:4                {
type                          ln:5                int
identifier                    ln:5                aNumber
operator.binary               ln:5                =
literal.int                   ln:5                1
control                       ln:5                ;
mod.access                    ln:6                static
type                          ln:6                int
identifier                    ln:6                aSecondNumber
operator.binary               ln:6                =
literal.int                   ln:6                2
control                       ln:6                ;
control                       ln:7                }
mod.access                    ln:9                static
type                          ln:9                int
identifier                    ln:9                constant
operator.binary               ln:9                =
literal.int                   ln:9                10
control                       ln:9                ;
mod.access                    ln:11               static
type                          ln:11               int
identifier                    ln:11               casualMethod
control                       ln:11               (
control                       ln:11               )
control                       ln:12               {
action                        ln:13               return
literal.int                   ln:13               1
control                       ln:13               ;
control                       ln:14               }
mod.access                    ln:16               static
type                          ln:16               void
identifier                    ln:16               main
control                       ln:16               (
identifier                    ln:16               String
identifier                    ln:16               args
control                       ln:16               )
control                       ln:17               {
type                          ln:18               int
identifier                    ln:18               a
operator.binary               ln:18               =
literal.int                   ln:18               4
control                       ln:18               ;
type                          ln:19               int
identifier                    ln:19               b
operator.binary               ln:19               =
literal.int                   ln:19               2
operator.binary               ln:19               +
identifier                    ln:19               casualMethod
control                       ln:19               (
control                       ln:19               )
control                       ln:19               ;
construct.conditional         ln:20               if
control                       ln:20               (
literal.boolean               ln:20               true
control                       ln:20               )
control                       ln:21               {
identifier                    ln:22               b
operator.binary               ln:22               +=
literal.int                   ln:22               1
control                       ln:22               ;
control                       ln:23               }
type                          ln:24               int
identifier                    ln:24               c
operator.binary               ln:24               =
identifier                    ln:24               constant
control                       ln:24               ;
construct.conditional         ln:25               if
control                       ln:25               (
literal.boolean               ln:25               false
control                       ln:25               )
control                       ln:26               {
identifier                    ln:27               c
operator.binary               ln:27               +=
literal.int                   ln:27               89
control                       ln:27               ;
control                       ln:28               }
construct.conditional         ln:29               else
control                       ln:30               {
identifier                    ln:31               c
operator.binary               ln:31               +=
literal.int                   ln:31               1
control                       ln:31               ;
control                       ln:32               }
type                          ln:33               int
identifier                    ln:33               sum
operator.binary               ln:33               =
identifier                    ln:33               a
operator.binary               ln:33               +
identifier                    ln:33               b
control                       ln:33               ;
type                          ln:34               int
identifier                    ln:34               product
operator.binary               ln:34               =
identifier                    ln:34               a
operator.binary               ln:34               *
identifier                    ln:34               b
control                       ln:34               ;
type                          ln:35               int
identifier                    ln:35               difference
operator.binary               ln:35               =
identifier                    ln:35               a
operator.binary               ln:35               -
identifier                    ln:35               b
control                       ln:35               ;
type                          ln:36               int
identifier                    ln:36               addImmediate
operator.binary               ln:36               =
identifier                    ln:36               a
operator.binary               ln:36               +
literal.int                   ln:36               2
control                       ln:36               ;
type                          ln:37               int
identifier                    ln:37               subImmediate
operator.binary               ln:37               =
identifier                    ln:37               a
operator.binary               ln:37               -
literal.int                   ln:37               2
control                       ln:37               ;
type                          ln:40               int
identifier                    ln:40               multiplyImmediate
operator.binary               ln:40               =
identifier                    ln:40               b
operator.binary               ln:40               *
literal.int                   ln:40               0x05
control                       ln:40               ;
type                          ln:41               int
identifier                    ln:41               parenthesis
operator.binary               ln:41               =
identifier                    ln:41               a
operator.binary               ln:41               +
control                       ln:41               (
identifier                    ln:41               a
operator.binary               ln:41               +
identifier                    ln:41               b
control                       ln:41               )
control                       ln:41               ;
type                          ln:42               int
identifier                    ln:42               pemdasFull
operator.binary               ln:42               =
control                       ln:42               (
identifier                    ln:42               a
operator.binary               ln:42               +
identifier                    ln:42               b
control                       ln:42               )
operator.binary               ln:42               *
literal.int                   ln:42               3
operator.binary               ln:42               -
literal.int                   ln:42               10
control                       ln:42               ;
type                          ln:43               int
identifier                    ln:43               pemdasFullAlternate
operator.binary               ln:43               =
identifier                    ln:43               a
operator.binary               ln:43               +
identifier                    ln:43               b
operator.binary               ln:43               *
control                       ln:43               (
literal.int                   ln:43               3
operator.binary               ln:43               -
literal.int                   ln:43               10
control                       ln:43               )
control                       ln:43               ;
type                          ln:44               int
identifier                    ln:44               multipleParenthis
operator.binary               ln:44               =
literal.int                   ln:44               1
operator.binary               ln:44               +
control                       ln:44               (
identifier                    ln:44               a
operator.binary               ln:44               +
control                       ln:44               (
identifier                    ln:44               b
operator.binary               ln:44               -
literal.int                   ln:44               5
control                       ln:44               )
operator.binary               ln:44               *
literal.int                   ln:44               2
control                       ln:44               )
operator.binary               ln:44               *
literal.int                   ln:44               7
control                       ln:44               ;
control                       ln:64               }
control                       ln:65               }
