construct.type                ln:1                class
identifier                    ln:1                BasicArithmatic
control                       ln:2                {
mod.access                    ln:3                static
construct.type                ln:3                class
identifier                    ln:3                StaticClass
control                       ln:4                {
identifier                    ln:5                BasicArithmatic
identifier                    ln:5                arithmatic
control                       ln:5                ;
type                          ln:6                int
identifier                    ln:6                aNumber
operator.binary               ln:6                =
literal.int                   ln:6                1
control                       ln:6                ;
mod.access                    ln:7                static
type                          ln:7                int
identifier                    ln:7                aSecondNumber
operator.binary               ln:7                =
literal.int                   ln:7                2
control                       ln:7                ;
control                       ln:8                }
mod.access                    ln:10               static
type                          ln:10               int
identifier                    ln:10               constant
operator.binary               ln:10               =
literal.int                   ln:10               10
control                       ln:10               ;
mod.access                    ln:12               static
type                          ln:12               int
identifier                    ln:12               casualMethod
control                       ln:12               (
control                       ln:12               )
control                       ln:13               {
action                        ln:14               return
literal.int                   ln:14               1
control                       ln:14               ;
control                       ln:15               }
mod.access                    ln:17               static
type                          ln:17               void
identifier                    ln:17               main
control                       ln:17               (
identifier                    ln:17               String
identifier                    ln:17               args
control                       ln:17               )
control                       ln:18               {
identifier                    ln:19               StaticClass
identifier                    ln:19               staticClassExample
operator.binary               ln:19               =
action                        ln:19               new
identifier                    ln:19               StaticClass
control                       ln:19               (
control                       ln:19               )
control                       ln:19               ;
identifier                    ln:20               staticClassExample
control                       ln:20               .
identifier                    ln:20               aNumber
operator.binary               ln:20               =
literal.int                   ln:20               20
control                       ln:20               ;
identifier                    ln:21               StaticClass
identifier                    ln:21               staticClassinstance2
operator.binary               ln:21               =
action                        ln:21               new
identifier                    ln:21               StaticClass
control                       ln:21               (
control                       ln:21               )
control                       ln:21               ;
identifier                    ln:22               staticClassinstance2
control                       ln:22               .
identifier                    ln:22               aNumber
operator.binary               ln:22               =
literal.int                   ln:22               10
control                       ln:22               ;
identifier                    ln:23               StaticClass
identifier                    ln:23               staticClassinstance3
operator.binary               ln:23               =
action                        ln:23               new
identifier                    ln:23               StaticClass
control                       ln:23               (
control                       ln:23               )
control                       ln:23               ;
identifier                    ln:24               staticClassinstance3
control                       ln:24               .
identifier                    ln:24               aNumber
operator.binary               ln:24               =
literal.int                   ln:24               50
control                       ln:24               ;
type                          ln:26               int
identifier                    ln:26               first
operator.binary               ln:26               =
identifier                    ln:26               staticClassExample
control                       ln:26               .
identifier                    ln:26               aNumber
operator.binary               ln:26               +
identifier                    ln:26               staticClassinstance2
control                       ln:26               .
identifier                    ln:26               aNumber
operator.binary               ln:26               +
identifier                    ln:26               staticClassinstance3
control                       ln:26               .
identifier                    ln:26               aNumber
control                       ln:26               ;
type                          ln:27               int
identifier                    ln:27               a
operator.binary               ln:27               =
identifier                    ln:27               staticClassExample
control                       ln:27               .
identifier                    ln:27               aNumber
operator.binary               ln:27               -
literal.int                   ln:27               16
control                       ln:27               ;
type                          ln:28               int
identifier                    ln:28               b
operator.binary               ln:28               =
literal.int                   ln:28               2
operator.binary               ln:28               +
identifier                    ln:28               casualMethod
control                       ln:28               (
control                       ln:28               )
control                       ln:28               ;
construct.conditional         ln:29               if
control                       ln:29               (
literal.boolean               ln:29               true
control                       ln:29               )
control                       ln:30               {
identifier                    ln:31               b
operator.binary               ln:31               +=
literal.int                   ln:31               1
control                       ln:31               ;
control                       ln:32               }
type                          ln:33               int
identifier                    ln:33               c
operator.binary               ln:33               =
identifier                    ln:33               constant
control                       ln:33               ;
construct.conditional         ln:34               if
control                       ln:34               (
literal.boolean               ln:34               false
control                       ln:34               )
control                       ln:35               {
identifier                    ln:36               c
operator.binary               ln:36               +=
literal.int                   ln:36               89
control                       ln:36               ;
control                       ln:37               }
construct.conditional         ln:38               else
control                       ln:39               {
identifier                    ln:40               c
operator.binary               ln:40               +=
literal.int                   ln:40               1
control                       ln:40               ;
control                       ln:41               }
type                          ln:42               int
identifier                    ln:42               sum
operator.binary               ln:42               =
identifier                    ln:42               a
operator.binary               ln:42               +
identifier                    ln:42               b
control                       ln:42               ;
type                          ln:43               int
identifier                    ln:43               product
operator.binary               ln:43               =
identifier                    ln:43               a
operator.binary               ln:43               *
identifier                    ln:43               b
control                       ln:43               ;
type                          ln:44               int
identifier                    ln:44               difference
operator.binary               ln:44               =
identifier                    ln:44               a
operator.binary               ln:44               -
identifier                    ln:44               b
control                       ln:44               ;
type                          ln:45               int
identifier                    ln:45               addImmediate
operator.binary               ln:45               =
identifier                    ln:45               a
operator.binary               ln:45               +
literal.int                   ln:45               2
control                       ln:45               ;
type                          ln:46               int
identifier                    ln:46               subImmediate
operator.binary               ln:46               =
identifier                    ln:46               a
operator.binary               ln:46               -
literal.int                   ln:46               2
control                       ln:46               ;
type                          ln:49               int
identifier                    ln:49               multiplyImmediate
operator.binary               ln:49               =
identifier                    ln:49               b
operator.binary               ln:49               *
literal.int                   ln:49               0x05
control                       ln:49               ;
type                          ln:50               int
identifier                    ln:50               parenthesis
operator.binary               ln:50               =
identifier                    ln:50               a
operator.binary               ln:50               +
control                       ln:50               (
identifier                    ln:50               a
operator.binary               ln:50               +
identifier                    ln:50               b
control                       ln:50               )
control                       ln:50               ;
type                          ln:51               int
identifier                    ln:51               pemdasFull
operator.binary               ln:51               =
control                       ln:51               (
identifier                    ln:51               a
operator.binary               ln:51               +
identifier                    ln:51               b
control                       ln:51               )
operator.binary               ln:51               *
literal.int                   ln:51               3
operator.binary               ln:51               -
literal.int                   ln:51               10
control                       ln:51               ;
type                          ln:52               int
identifier                    ln:52               pemdasFullAlternate
operator.binary               ln:52               =
identifier                    ln:52               a
operator.binary               ln:52               +
identifier                    ln:52               b
operator.binary               ln:52               *
control                       ln:52               (
literal.int                   ln:52               3
operator.binary               ln:52               -
literal.int                   ln:52               10
control                       ln:52               )
control                       ln:52               ;
type                          ln:53               int
identifier                    ln:53               multipleParenthis
operator.binary               ln:53               =
literal.int                   ln:53               1
operator.binary               ln:53               +
control                       ln:53               (
identifier                    ln:53               a
operator.binary               ln:53               +
control                       ln:53               (
identifier                    ln:53               b
operator.binary               ln:53               -
literal.int                   ln:53               5
control                       ln:53               )
operator.binary               ln:53               *
literal.int                   ln:53               2
control                       ln:53               )
operator.binary               ln:53               *
literal.int                   ln:53               7
control                       ln:53               ;
control                       ln:73               }
control                       ln:74               }
