construct.type                ln:1                class
identifier                    ln:1                BasicArithmatic
control                       ln:2                {
mod.access                    ln:3                static
construct.type                ln:3                class
identifier                    ln:3                StaticClass
control                       ln:4                {
identifier                    ln:5                BasicArithmatic
identifier                    ln:5                arithmatic
control                       ln:5                ;
type                          ln:6                int
identifier                    ln:6                aNumber
operator.binary               ln:6                =
literal.int                   ln:6                1
control                       ln:6                ;
mod.access                    ln:7                static
type                          ln:7                int
identifier                    ln:7                aSecondNumber
operator.binary               ln:7                =
literal.int                   ln:7                2
control                       ln:7                ;
control                       ln:8                }
mod.access                    ln:10               static
type                          ln:10               int
identifier                    ln:10               constant
operator.binary               ln:10               =
literal.int                   ln:10               10
control                       ln:10               ;
mod.access                    ln:12               static
type                          ln:12               int
identifier                    ln:12               casualMethod
control                       ln:12               (
control                       ln:12               )
control                       ln:13               {
action                        ln:14               return
literal.int                   ln:14               1
control                       ln:14               ;
control                       ln:15               }
mod.access                    ln:17               static
type                          ln:17               void
identifier                    ln:17               main
control                       ln:17               (
identifier                    ln:17               String
identifier                    ln:17               args
control                       ln:17               )
control                       ln:18               {
identifier                    ln:19               StaticClass
identifier                    ln:19               staticClassExample
operator.binary               ln:19               =
action                        ln:19               new
identifier                    ln:19               StaticClass
control                       ln:19               (
control                       ln:19               )
control                       ln:19               ;
identifier                    ln:20               staticClassExample
control                       ln:20               .
identifier                    ln:20               aNumber
operator.binary               ln:20               =
literal.int                   ln:20               20
control                       ln:20               ;
type                          ln:22               int
identifier                    ln:22               a
operator.binary               ln:22               =
identifier                    ln:22               staticClassExample
control                       ln:22               .
identifier                    ln:22               aNumber
operator.binary               ln:22               -
literal.int                   ln:22               16
control                       ln:22               ;
type                          ln:23               int
identifier                    ln:23               b
operator.binary               ln:23               =
literal.int                   ln:23               2
operator.binary               ln:23               +
identifier                    ln:23               casualMethod
control                       ln:23               (
control                       ln:23               )
control                       ln:23               ;
construct.conditional         ln:24               if
control                       ln:24               (
literal.boolean               ln:24               true
control                       ln:24               )
control                       ln:25               {
identifier                    ln:26               b
operator.binary               ln:26               +=
literal.int                   ln:26               1
control                       ln:26               ;
control                       ln:27               }
type                          ln:28               int
identifier                    ln:28               c
operator.binary               ln:28               =
identifier                    ln:28               constant
control                       ln:28               ;
construct.conditional         ln:29               if
control                       ln:29               (
literal.boolean               ln:29               false
control                       ln:29               )
control                       ln:30               {
identifier                    ln:31               c
operator.binary               ln:31               +=
literal.int                   ln:31               89
control                       ln:31               ;
control                       ln:32               }
construct.conditional         ln:33               else
control                       ln:34               {
identifier                    ln:35               c
operator.binary               ln:35               +=
literal.int                   ln:35               1
control                       ln:35               ;
control                       ln:36               }
type                          ln:37               int
identifier                    ln:37               sum
operator.binary               ln:37               =
identifier                    ln:37               a
operator.binary               ln:37               +
identifier                    ln:37               b
control                       ln:37               ;
type                          ln:38               int
identifier                    ln:38               product
operator.binary               ln:38               =
identifier                    ln:38               a
operator.binary               ln:38               *
identifier                    ln:38               b
control                       ln:38               ;
type                          ln:39               int
identifier                    ln:39               difference
operator.binary               ln:39               =
identifier                    ln:39               a
operator.binary               ln:39               -
identifier                    ln:39               b
control                       ln:39               ;
type                          ln:40               int
identifier                    ln:40               addImmediate
operator.binary               ln:40               =
identifier                    ln:40               a
operator.binary               ln:40               +
literal.int                   ln:40               2
control                       ln:40               ;
type                          ln:41               int
identifier                    ln:41               subImmediate
operator.binary               ln:41               =
identifier                    ln:41               a
operator.binary               ln:41               -
literal.int                   ln:41               2
control                       ln:41               ;
type                          ln:44               int
identifier                    ln:44               multiplyImmediate
operator.binary               ln:44               =
identifier                    ln:44               b
operator.binary               ln:44               *
literal.int                   ln:44               0x05
control                       ln:44               ;
type                          ln:45               int
identifier                    ln:45               parenthesis
operator.binary               ln:45               =
identifier                    ln:45               a
operator.binary               ln:45               +
control                       ln:45               (
identifier                    ln:45               a
operator.binary               ln:45               +
identifier                    ln:45               b
control                       ln:45               )
control                       ln:45               ;
type                          ln:46               int
identifier                    ln:46               pemdasFull
operator.binary               ln:46               =
control                       ln:46               (
identifier                    ln:46               a
operator.binary               ln:46               +
identifier                    ln:46               b
control                       ln:46               )
operator.binary               ln:46               *
literal.int                   ln:46               3
operator.binary               ln:46               -
literal.int                   ln:46               10
control                       ln:46               ;
type                          ln:47               int
identifier                    ln:47               pemdasFullAlternate
operator.binary               ln:47               =
identifier                    ln:47               a
operator.binary               ln:47               +
identifier                    ln:47               b
operator.binary               ln:47               *
control                       ln:47               (
literal.int                   ln:47               3
operator.binary               ln:47               -
literal.int                   ln:47               10
control                       ln:47               )
control                       ln:47               ;
type                          ln:48               int
identifier                    ln:48               multipleParenthis
operator.binary               ln:48               =
literal.int                   ln:48               1
operator.binary               ln:48               +
control                       ln:48               (
identifier                    ln:48               a
operator.binary               ln:48               +
control                       ln:48               (
identifier                    ln:48               b
operator.binary               ln:48               -
literal.int                   ln:48               5
control                       ln:48               )
operator.binary               ln:48               *
literal.int                   ln:48               2
control                       ln:48               )
operator.binary               ln:48               *
literal.int                   ln:48               7
control                       ln:48               ;
control                       ln:68               }
control                       ln:69               }
